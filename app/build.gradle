//buildscript {
//    repositories {
//        maven { url 'https://jitpack.io' }
//    }
//}
//apply plugin: 'com.android.application'
//
//repositories {
//    maven { url 'https://maven.fabric.io/public' }
//}
//
//
//android {
//    namespace "com.vasilkoff.easyvpnfree"
//    compileSdkVersion 34
//    buildToolsVersion "24.0.2"
//
//    defaultConfig {
//        applicationId "com.vasilkoff.easyvpnfree"
//        minSdkVersion 17
//        versionCode 50
//        versionName "1.6"
//        setProperty("archivesBaseName", "easyvpnfree-$versionName-$versionCode")
//    }
//
//    lintOptions {
//        disable 'MissingTranslation'
//    }
//
//    flavorDimensions "version" // Define flavor dimensions
//    productFlavors {
//        free {
//            dimension "version"
//            applicationId "com.vasilkoff.easyvpnfree"
//            resValue "string", "app_name", "Easy VPN Free"
//            resValue "string", "notification_title", "Easy VPN Free - %s"
//        }
//
//        pro {
//            dimension "version"
//            applicationId "com.vasilkoff.easyvpn"
//            resValue "string", "app_name", "Easy VPN"
//            resValue "string", "notification_title", "Easy VPN - %s"
//        }
//
//        underground {
//            dimension "version"
//            applicationId "com.vasilkoff.easyvpnunderground"
//            resValue "string", "app_name", "Easy VPN"
//            resValue "string", "notification_title", "Easy VPN - %s"
//        }
//    }
//
//    buildTypes {
//        release {
//            minifyEnabled false
//            shrinkResources false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
////            ndk {
////              //abiFilters "armeabi" "x86"
////                abiFilters "armeabi-v7a", "armeabi", "arm64-v8a" // includes ARM SO files only, so no x86 SO file
////            }
//        }
//        debug {
//            minifyEnabled false
//            shrinkResources false
////            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
////            ndk {
////              //abiFilters "armeabi" "x86"
////                abiFilters "armeabi-v7a", "armeabi", "arm64-v8a" // includes ARM SO files only, so no x86 SO file
////            }
//        }
//
//    }
//}
//
//
//
//dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation 'com.android.support:support-v4:24.0.0'
//    implementation 'com.daimajia.numberprogressbar:library:1.2@aar'
//    implementation 'com.github.amitshekhariitbhu.Fast-Android-Networking:android-networking:1.0.4'
//    implementation 'com.google.code.gson:gson:2.7'
//    implementation 'org.mapsforge:mapsforge-map-android:0.6.1'
//    implementation 'com.caverock:androidsvg:1.2.2-beta-1'
//    testImplementation 'junit:junit:4.12'
//    implementation('com.crashlytics.sdk.android:crashlytics:2.6.5') {
//        transitive = true
//    }
//    implementation 'com.google.android.gms:play-services-analytics:10.0.1'
//}

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}
android {

    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }
    dexOptions {
        javaMaxHeapSize "4G"
    }
    namespace 'com.vasilkoff.easyvpnfree'
    compileSdk 34
    buildFeatures {
        buildConfig = true
        aidl true  // Enable AIDL support
        viewBinding true
        dataBinding true
    }
    defaultConfig {
        buildConfigField "String", "API_URL", "\"https://api.example.com\""
        applicationId "com.vasilkoff.easyvpnfree"
        minSdk 19
        targetSdk 34
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildFeatures {

    }
    splits {

        // Configures multiple APKs based on ABI.
        abi {

            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that you only
            // want APKs for x86 and x86_64.

            // Resets the list of ABIs for Gradle to create APKs for to none.
            reset()

            // Specifies a list of ABIs for Gradle to create APKs for.
            include "armeabi-v7a","x86_64","x86"

            // Specifies that you don't want to also generate a universal APK that includes all ABIs.
            universalApk false
        }
    }

//    splits {
//        abi {
//            include("armeabi-v7a", "arm64-v8a", "x86", "x86_64") // Define ABIs to include
//        }
//    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    ndkVersion '21.4.7075529'
//    buildToolsVersion '33.0.1'

}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation "com.airbnb.android:lottie:4.2.0"
    implementation "androidx.startup:startup-runtime:1.0.0"
    implementation 'com.android.support:multidex:1.0.3'

    // SDP Dimen
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'androidx.drawerlayout:drawerlayout:1.2.0'//16.0.9'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation 'com.android.support:support-v4:24.0.0'
    implementation 'com.daimajia.numberprogressbar:library:1.2@aar'
    implementation 'com.github.amitshekhariitbhu.Fast-Android-Networking:android-networking:1.0.4'
    implementation 'com.google.code.gson:gson:2.7'
    implementation 'org.mapsforge:mapsforge-map-android:0.6.1'
    implementation 'com.caverock:androidsvg:1.2.2-beta-1'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation("pl.droidsonroids.gif:android-gif-drawable:1.2.23")
    implementation("com.github.bumptech.glide:glide:4.11.0") // Use the appropriate version for your app
    implementation 'com.google.android.exoplayer:exoplayer:2.19.0'
    implementation 'com.android.support:support-annotations:28.0.0'

    implementation "com.github.CymChad:BaseRecyclerViewAdapterHelper:$quick_version"
    implementation "com.afollestad.material-dialogs:core:$dialog_version"

    implementation "com.tencent.bugly:crashreport:$bugly_version"
    implementation "com.tencent.bugly:nativecrashreport:$bugly_native_version"
    implementation 'com.tencent:mmkv:1.2.12'

    implementation 'com.geyifeng.immersionbar:immersionbar:3.2.2'
    implementation "com.github.bumptech.glide:glide:4.10.0"
    implementation 'com.squareup.okhttp3:okhttp:3.12.13'

    implementation 'org.conscrypt:conscrypt-android:2.5.3'
//    implementation 'ai.gpt4all:gpt4all-android:0.0.1'
//    implementation 'com.github.bernard-martin:llama-android:1.0.0'

//    implementation "com.github.bumptech.glide:okhttp3-integration:4.10.0"
    implementation "com.github.zjupure:webpdecoder:2.6.4.16.0"
//    implementation 'com.hexadevlabs:gpt4all-java-binding:1.1.5'
//    implementation 'com.github.nomic-ai:gpt4all-android:0.0.4'
    implementation 'net.java.dev.jna:jna:5.13.0@aar'
    implementation "com.google.android.material:material:${materialVersion}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${kotlinCoroutines}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "com.github.CymChad:BaseRecyclerViewAdapterHelper:$quick_version"
    implementation "com.afollestad.material-dialogs:core:$dialog_version"
//        implementation project(':libausbc')
//    implementation project(':libnative')
//    implementation project(':libuvc')

//    implementation "com.github.masterwok:libvlc-android-sdk:3.0.13"
//    implementation project(':libuvccamera')
//    implementation project(':usbCameraCommon')
//    implementation("com.serenegiant:common:2.12.4") {
//        exclude module: 'support-v4'
//    }
    implementation project(':aars')
    implementation project(':models')
    testImplementation 'junit:junit:4.13.2'
}
